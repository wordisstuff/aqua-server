{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation for Water app"
  },
  "servers": [
    {
      "url": "https://aqua-server-83k1.onrender.com"
    },
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication operations"
    },
    {
      "name": "User",
      "description": "User profile operations"
    },
    {
      "name": "Water info",
      "description": "Water operations"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User signup",
        "operationId": "singup",
        "description": "Register a new user with their email password.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Enter your email",
                    "type": "string",
                    "format": "email",
                    "example": "johnsmit@gmail.com"
                  },
                  "password": {
                    "description": "Enter your password",
                    "type": "string",
                    "minLength": 6,
                    "example": "securePassword123"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          },
          "description": "User details required for signup."
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered the user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "abc123"
                        },
                        "email": {
                          "type": "string",
                          "example": "johnsmit@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "operationId": "signin",
        "description": "Authenticate a user with their email and password.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email address",
                    "type": "string",
                    "format": "email",
                    "example": "johnsmit@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "securePassword123"
                  }
                }
              }
            }
          },
          "description": "User credentials required for authentication."
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "token",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful!"
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                      "description": "JWT token for authenticated user."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid input data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User logout",
        "operationId": "logout",
        "description": "Log out an authenticated user by invalidating their JWT token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout successful!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request reset password",
        "operationId": "requestResetPassword",
        "description": "Reset password request",
        "security": [
          {}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "johnsmith@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reset password email was successfully sent!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset a password",
        "operationId": "resetPassword",
        "description": "Reset the password",
        "security": [
          {}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "password": {
                    "description": "User's new password",
                    "type": "string",
                    "example": "newPassword"
                  },
                  "token": {
                    "description": "Token from email to reset the password",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMjM0NSIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY4NjkzNTczNiwiZXhwIjoxNjg2OTM5MzM2fQ.WxL6mWQlDrqX5L4s57UyYkqPLJOhLgGD0rf1RqaUVds"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password was successfully reset!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password successfully changed!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get information about the user",
        "operationId": "getUserInfo",
        "description": "Get information about user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found a user!"
                    },
                    "data": {
                      "type": "object",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/user"
                        }
                      ],
                      "required": [
                        "email",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Get user profile",
        "operationId": "getUserProfile",
        "description": "Retrieve the authenticated user profile.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile data retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "60d0fe4f5311236168a109ca"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Smith"
                    },
                    "email": {
                      "type": "string",
                      "example": "johnsmith@gmail.com"
                    },
                    "avatar": {
                      "type": "string",
                      "example": "https://res.cloudinary.com/dntbkzhtq/image/upload/v1719141998/AquaTrack/defaultAvatar.webp"
                    },
                    "gender": {
                      "type": "string",
                      "example": "woman"
                    },
                    "weight": {
                      "type": "number",
                      "example": 0
                    },
                    "dailyActivityTime": {
                      "type": "number",
                      "example": 0
                    },
                    "dailyWaterNorm": {
                      "type": "number",
                      "example": 1.5
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/happy": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "User"
        ],
        "summary": "Get happy endpoint",
        "operationId": "getHappy",
        "description": "Retrieve the total count of users and a list of avatars.",
        "responses": {
          "200": {
            "description": "Successfully retrieved happy data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 100
                    },
                    "avatars": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "https://res.cloudinary.com/dntbkzhtq/image/upload/v1719141998/AquaTrack/avatar.webp"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water info"
        ],
        "summary": "Add water record",
        "operationId": "addWaterRecord",
        "description": "Add a new water record for the user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 0.4
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-07-10T10:17:20.886Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water record successfully added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newWaterRecord": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "example": 0.5
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-10T10:17:20.886Z"
                        },
                        "owner": {
                          "type": "string",
                          "example": "667c4a6aa00f3339fea36b1b"
                        },
                        "_id": {
                          "type": "string",
                          "example": "66855549f18f2eac7515fd00"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-03T13:42:33.278Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-03T13:42:33.278Z"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record successfully added"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water info"
        ],
        "summary": "Update water amount",
        "operationId": "updateWaterRecord",
        "description": "Update an existing water record.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66855549f18f2eac7515fd00"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 0.2
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-07-10T10:17:20.886Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Water record successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "updatedRecord": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "66855549f18f2eac7515fd00"
                        },
                        "amount": {
                          "type": "number",
                          "example": 0.2
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-10T10:17:20.886Z"
                        },
                        "owner": {
                          "type": "string",
                          "example": "667c4a6aa00f3339fea36b1b"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-03T13:42:33.278Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-07-03T13:45:35.216Z"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record successfully updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water info"
        ],
        "summary": "Delete water record",
        "operationId": "deleteWaterRecord",
        "description": "Delete an existing water record by ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "66855549f18f2eac7515fd00"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Water record successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "newWaterRecord": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "example": 0.3
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T11:35:59.880Z"
                        },
                        "owner": {
                          "type": "string",
                          "example": "4579687c17342250d5344321"
                        },
                        "_id": {
                          "type": "string",
                          "example": "667ea32bdcebb99c66d54321"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T11:48:59.927Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2024-06-28T13:26:25.271Z"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Water record successfully deleted"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/daily/{date}": {
      "get": {
        "tags": [
          "Water info"
        ],
        "summary": "Get daily water record",
        "operationId": "getDailyWaterRecord",
        "description": "Retrieve the total water consumption for a specific day.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-07-01"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Daily water record retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalAmountForDay": {
                      "type": "number",
                      "example": 1.4
                    },
                    "percentComplete": {
                      "type": "integer",
                      "example": 75
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number",
                            "example": 0.5
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-07-01T12:30:00Z"
                          },
                          "owner": {
                            "type": "string",
                            "example": "614f5e3e8c48d53a08a7efc6"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/monthly/{year}/{month}": {
      "get": {
        "tags": [
          "Water info"
        ],
        "summary": "Get monthly water record",
        "operationId": "getMonthlyWaterRecord",
        "description": "Retrieve the total water consumption for a specific month.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2024
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 6
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Monthly water record retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalWaterForMonth": {
                      "type": "number",
                      "example": 23.4
                    },
                    "daysInMonth": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "67ca1234dceba44ac54b6"
                          },
                          "day": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-06-26"
                          },
                          "totalAmount": {
                            "type": "number",
                            "example": 1
                          },
                          "percentComplete": {
                            "type": "number",
                            "example": 66.66
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad request, invalid input data.",
        "content": {
          "application/json": {
            "type": "object",
            "properties": {
              "status": {
                "type": "integer",
                "example": 400
              },
              "message": {
                "type": "string",
                "example": "Invalid input data."
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Water info not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": "-status -message -data",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Water info not found"
                },
                "data": {
                  "type": "object",
                  "required": "-message",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Water info not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict, email already exists.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email already exists."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": "integer",
                "example": 500
              },
              "message": {
                "type": "string",
                "example": "Internal server error."
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "_id",
          "createdAt",
          "updatedAt",
          "photo",
          "name",
          "gender",
          "weight",
          "activeTime",
          "dailyWaterIntake"
        ],
        "properties": {
          "name": {
            "description": "User's name. Empty by default. Change it by patch method",
            "type": "string"
          },
          "avatar": {
            "description": "User's avatar. Empty by default. Change it by patch method",
            "type": "string"
          },
          "gender": {
            "description": "User's gender. Empty by default. Change it by patch method",
            "type": "string"
          },
          "dailyWaterIntake": {
            "description": "User's daily norm of water. 2000 ml by default. Change it by patch method",
            "type": "number"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "johnsmith@gmail.com"
          },
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "66b750163beb29c60d215f8c"
          },
          "weight": {
            "description": "User weight",
            "type": "number",
            "example": 80
          },
          "activeTime": {
            "description": "User time of active participation in sports",
            "type": "number",
            "example": 2.5
          },
          "createdAt": {
            "description": "When a user has been created at",
            "type": "string",
            "format": "date-time",
            "example": "2024-08-10T11:33:42.181Z"
          },
          "updatedAt": {
            "description": "When a user has been updated at",
            "type": "string",
            "format": "date-time",
            "example": "2024-08-10T11:33:42.181Z"
          }
        }
      }
    }
  }
}